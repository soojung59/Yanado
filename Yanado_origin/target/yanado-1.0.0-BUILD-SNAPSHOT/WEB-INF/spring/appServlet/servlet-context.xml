<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">






	<context:component-scan
		base-package="com.bit.yanado" />

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>



	<beans:bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location">
			<beans:value>classpath:jdbc.properties</beans:value>
		</beans:property>
	</beans:bean>
	

	<beans:bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		p:driverClassName="${driver}" p:url="${url}" p:username="${username}"
		p:password="${password}" />



	<!-- definetheSqlSessionFactory -->
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mapperLocations"
			value="classpath:mappers/**/*Mapper.xml" />
		<beans:property name="typeAliasesPackage"
			value="com.bit.yanado.model.dto" />
	</beans:bean>
	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0"
			ref="sqlSessionFactory" />
	</beans:bean>

	<!-- scanformappers andletthembeautowired -->
	<beans:bean
		class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<beans:property name="basePackage"
			value="com.bit.yanado.model.dao" />
	</beans:bean>

	<!-- 트랜잭션 매니저 bean 을 등록합니다. -->
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource">
		</beans:property>
	</beans:bean>

	<!-- 업로드 패스 설정 -->
	<beans:bean class="java.lang.String" id="uploadPath">
		<beans:constructor-arg
			value="D:\kubg\workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\kubg\resources" />
	</beans:bean>
	<!-- 일반 파일 업로드 경로 -->
	<resources mapping="/imgUpload/**"
		location="/resources/imgUpload/" />

	<beans:bean
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		id="multipartResolver">
		<beans:property name="maxUploadSize" value="10485760" />
	</beans:bean>




</beans:beans>











